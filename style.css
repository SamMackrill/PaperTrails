/* --- Color Variables --- */
:root {
  --bg-color: #f4f4f4;
  --text-color: #333;
  --card-bg-color: #fff;
  --card-border-color: #ccc;
  --shadow-color: rgba(0,0,0,0.1);
  --button-bg: #eee;
  --button-hover-bg: #ddd;
  --button-border: #ccc;
  --button-text: #333;
  --axis-color: #333;
  --marker-color: #888;
  --marker-text-color: #555;
  --marker-major-color: #333;
  --current-year-color: #c1121f;
  --modal-overlay: rgba(0,0,0,0.6);
  --modal-bg: #fefefe;
  --modal-border: #888;
  --modal-text: #555;
  --modal-close-color: #aaa;
  --modal-close-hover: #000;
  --pub-border-color: rgba(0,0,0,0.3);
  --img-error-bg: #eee;
  --img-error-border: #aaa;
  --discovery-border-color: rgba(0,0,0,0.3);
  --current-scale: 1; /* Default scale */
  --current-inverse-scale: 1; /* Default inverse scale */
}

body.dark-mode {
  --bg-color: #1a1a1a;
  --text-color: #eee;
  --card-bg-color: #2a2a2a;
  --card-border-color: #555;
  --shadow-color: rgba(255,255,255,0.08);
  --button-bg: #444;
  --button-hover-bg: #555;
  --button-border: #666;
  --button-text: #eee;
  --axis-color: #ccc;
  --marker-color: #aaa;
  --marker-text-color: #bbb;
  --marker-major-color: #eee;
  --current-year-color: #ff6b6b;
  --modal-overlay: rgba(0,0,0,0.75);
  --modal-bg: #333;
  --modal-border: #666;
  --modal-text: #ccc;
  --modal-close-color: #bbb;
  --modal-close-hover: #fff;
  --pub-border-color: rgba(255,255,255,0.3);
  --img-error-bg: #444;
  --img-error-border: #777;
  --discovery-border-color: rgba(255,255,255,0.3);
}

/* Basic Reset & Body */
body {
  font-family: sans-serif;
  margin: 0;
  padding: 0;
  background-color: var(--bg-color);
  color: var(--text-color);
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 100vh;
  transition: background-color 0.3s ease, color 0.3s ease;
}

h1 {
  color: var(--text-color);
  text-align: center;
  margin-top: 20px;
  margin-bottom: 15px; /* Will be overridden by controls margin if they are close */
}

/* Controls */
.controls {
  position: absolute;
  top: 2px; /* Moved up closer to the top */
  right: 20px; /* Position to the right */
  display: flex;
  justify-content: space-between; /* Space out left, center, right groups */
  align-items: center;
  /* width: auto; /* Let content determine width, or set a specific max-width if needed */
  padding: 5px 10px; /* Reduced top/bottom padding */
  align-items: flex-start; /* Align groups to their top */
  background-color: var(--card-bg-color);
  color: var(--text-color);
  border-radius: 5px;
  box-shadow: 0 2px 5px var(--shadow-color);
  z-index: 100;
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
  box-sizing: border-box;
}

.controls-left {
  display: flex;
  flex-direction: column; /* Stack zoom slider and action buttons vertically */
  align-items: flex-start; /* Align items to the start of the column */
  gap: 8px; /* Gap between zoom slider and the actions-toggles-row */
}

.actions-toggles-row {
  display: flex;
  flex-direction: row;
  align-items: flex-start; /* Align buttons and toggle group at their top */
  gap: 5px; /* Reduced space between action-buttons and toggles-group-stacked */
}

.toggles-group-stacked {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 4px; /* Gap between individual toggles */
}

.controls-center, /* This might be empty now, or can be removed if truly unused */
.controls-right {
  display: flex;
  align-items: center;
  gap: 10px; /* Reduced gap between control groups, e.g., between center and right */
}

.controls-center {
  /* display: flex; /* Already flex, ensure it's set */
  /* flex-direction: column; /* Stack toggles vertically */
  /* align-items: flex-start; /* Align toggles to the start of the column */
  /* justify-content: center; */
  flex-grow: 0; /* Was 1. If empty, it shouldn't expand. */
  min-width: 5px; /* Minimal space if it's kept in HTML */
  /* gap: 4px; /* Adjust gap between stacked toggles */
}

.controls-right {
  justify-content: flex-end; /* Push sliders to the far right */
}

.image-toggle-control {
  display: flex;
  align-items: center;
  gap: 5px;
  font-size: 11px; /* Compactness */
}
.image-toggle-control label {
  margin: 0;
  min-width: 65px; /* Reduced from 75px */
  text-align: left; /* Align text to the left */
}
.image-toggle-control input[type="checkbox"] {
  margin: 0;
}


.action-buttons {
  display: flex;
  flex-direction: row; /* Keep buttons in a row */
  gap: 8px; /* Adjusted space between buttons for compactness */
}

.slider-control {
  display: flex;
  align-items: center; /* Align label/value with slider */
   gap: 5px;
}

.slider-control.zoom-control { /* Target zoom specifically */
   flex-direction: row; /* Arrange items horizontally */
   align-items: center; /* Vertically align items in the center */
   gap: 8px; /* Adjust gap for horizontal layout, was 4px */
   width: auto; /* Allow it to fit with other controls */
}

.zoom-label-value {
    display: flex;
    justify-content: space-between; /* Space out label and value */
    width: auto; /* Adjust width, was 100% */
    /* padding: 0 2px; Removed, let gap handle spacing or add specific if needed */
    box-sizing: border-box;
    gap: 5px; /* Add gap between label and value text */
}

.slider-control.zoom-control input[type="range"] {
  width: 100px; /* Specific width for the slider */
  box-sizing: border-box; /* Include padding/border in width */
}


.slider-control.height-control {
  display: flex;
  /* flex-direction: column; /* No longer needed as label is gone */
  align-items: center;
  justify-content: center; /* Center the vertical slider if container is wider */
  width: 20px; /* Make container narrow */
  height: 100px; /* Provide a fixed height for the vertical slider container */
  padding: 0 2px; /* Small padding to help center slider if it's thinner */
}

/* .slider-control label { /* Label is removed */
/*  font-size: 11px; */
/* } */

.zoom-control .zoom-level { /* Style zoom level display */
  font-size: 11px;
  font-weight: normal; /* Make it less prominent than the main label */
}


.slider-control input[type="range"] {
  /* width: 100px; Default width, overridden for zoom */
  height: 5px; /* Default horizontal height */
  cursor: pointer;
  margin: 0; /* Reset margin */
}

#height-slider {
  appearance: slider-vertical; /* Make it vertical */
  writing-mode: bt-lr; /* Bottom-to-top, left-to-right (standard for vertical sliders) */
  width: 5px; /* Thickness of the vertical slider */
  height: 80px; /* Length of the vertical slider */
  padding: 0; /* Reset padding */
  margin: 0; /* Reset margin */
  box-sizing: border-box;
}

.controls button {
  padding: 4px 8px; /* Adjusted for compactness */
  font-size: 14px; /* Adjusted for compactness */
  cursor: pointer;
  border: 1px solid var(--button-border);
  background-color: var(--button-bg);
  color: var(--button-text);
  border-radius: 3px;
  transition: background-color 0.2s ease;
  flex-grow: 1; /* Allow buttons to share space in action-buttons row */
}

.controls button:hover {
  background-color: var(--button-hover-bg);
}

.zoom-level {
  font-weight: bold;
  min-width: 30px; /* Adjusted for compactness */
  text-align: right;
}


/* Timeline Container & Timeline */
.timeline-container {
  width: 100%;
  height: 600px; /* Set default height to 600px */
  overflow: hidden;
  border-top: 1px solid var(--card-border-color);
  border-bottom: 1px solid var(--card-border-color);
  background-color: var(--card-bg-color);
  position: relative;
  cursor: grab;
  transition: background-color 0.3s ease, border-color 0.3s ease;
  touch-action: none; /* Disable default browser touch actions (scrolling, zooming) on this element */
}

.timeline {
  position: relative;
  height: 100%;
  transform-origin: 0 0;
  background-color: var(--card-bg-color);
  box-sizing: border-box;
  transition: background-color 0.3s ease;
  will-change: transform, background-color;
  /* width set dynamically */
}

/* Timeline Axis Line element */
.timeline-axis-line {
  position: absolute;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: var(--axis-color);
  z-index: 5;
  transition: background-color 0.3s ease;
  /* top set by JS */
}

/* Timeline Axis Label */
.timeline-axis-label {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  font-size: 12px;
  color: var(--marker-text-color);
  white-space: nowrap;
  margin-top: 10px;
  z-index: 6;
  transition: color 0.3s ease;
  /* top set by JS */
}

/* Year Markers */
.year-marker {
  position: absolute;
  width: 1px;
  height: 10px; /* Tick goes downwards */
  background-color: var(--marker-color);
  z-index: 6;
  transition: background-color 0.3s ease;
  /* top/left set by JS */
}

.year-marker.major {
  height: 20px;
  background-color: var(--marker-major-color);
}

/* Removed .year-marker span rules - labels now rendered via SVG */

/* Publication Diamonds */
.publication {
  position: absolute;
  width: 12px;
  height: 12px;
  /* Apply inverse scale using CSS variable, combined with rotation */
  transform: rotate(45deg) scale(var(--current-inverse-scale, 1));
  transform-origin: center center; /* Ensure scaling happens from the center */
  cursor: pointer;
  z-index: 20;
  border: 1px solid var(--pub-border-color);
  box-sizing: border-box; /* Include border in element's dimensions */
  transition: border-color 0.3s ease, transform 0.2s ease;
  will-change: transform, background-color;
  /* background, top/left set by JS */
}

.publication:hover,
.publication.highlight {
  /* Combine hover scale effect with inverse scale */
  transform: rotate(45deg) scale(calc(1.3 * var(--current-inverse-scale, 1)));
  z-index: 25;
}

/* Discovery Marker Style */
.discovery-marker {
  position: absolute;
  width: 12px;
  height: 12px;
  border-radius: 50%; /* Circle */
  cursor: pointer;
  z-index: 18; /* Below publications */
  border: 1px solid var(--discovery-border-color);
  /* Apply inverse scale using CSS variable */
  transform: scale(var(--current-inverse-scale, 1));
  transform-origin: center center; /* Ensure scaling happens from the center */
  transition: border-color 0.3s ease, background-color 0.3s ease, transform 0.2s ease;
  will-change: transform, background-color;
  /* background, top/left set by JS */
}

.discovery-marker:hover,
.discovery-marker.highlight {
  /* Combine hover scale effect with inverse scale */
  transform: scale(calc(1.3 * var(--current-inverse-scale, 1)));
  z-index: 24;
}

/* Scientist Photos */
.scientist-photo {
  position: absolute;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  object-fit: cover;
  filter: grayscale(100%);
  /* Apply inverse scale using CSS variable */
  transform: scale(var(--current-inverse-scale, 1));
  transform-origin: center center; /* Ensure scaling happens from the center */
  cursor: pointer;
  z-index: 30;
  background-color: var(--card-bg-color);
  box-shadow: 0 1px 3px var(--shadow-color);
  transition: filter 0.2s ease, transform 0.2s ease, background-color 0.3s ease, box-shadow 0.3s ease;
  will-change: transform, filter;
  /* border set dynamically */
  /* top/left set by JS */
}

.scientist-photo:hover,
.scientist-photo.highlight {
  filter: grayscale(0%);
  /* Combine hover scale effect with inverse scale */
  transform: scale(calc(1.1 * var(--current-inverse-scale, 1)));
  z-index: 35;
}

.scientist-photo:error {
  background-color: var(--img-error-bg) !important;
  border-style: dashed !important;
  border-color: var(--img-error-border) !important;
  color: var(--img-error-border) !important;
}

/* Connecting Lines (SVG) */
.timeline-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
  overflow: visible;
}

.connecting-line {
  stroke-width: 1.5px;
  transition: stroke-width 0.2s ease;
  /* stroke set dynamically */
}

.connecting-line.highlight {
    stroke-width: 3px; /* Make line thicker on highlight */
}

/* Event Boxes */
.event-box {
  /* Position, width, top, left, background-color, border, box-sizing, cursor set by JS */
  height: auto; /* Allow vertical expansion */
  min-height: 16px; /* Ensure a minimum height */
  padding: 3px 5px; /* Add some padding */
  /* z-index: 9; */ /* Removed z-index */
  transition: background-color 0.3s ease; /* Match other transitions */
}

/* Restore basic .event-label rule */
.event-label {
  display: block;
  font-size: 15px; /* Increased size */
  /* color: #fff; */ /* Color set dynamically by JS */
  text-align: center;
  white-space: normal; /* Allow text wrapping */
  line-height: 1.2; /* Adjust line height for wrapped text */
  pointer-events: none; /* Prevent label interference */
  will-change: transform; /* Hint for rendering optimization during scaling */
}

/* Modals */
.modal {
  position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%;
  overflow: auto; background-color: var(--modal-overlay); display: flex;
  align-items: center; justify-content: center; visibility: hidden; opacity: 0;
  transition: opacity 0.3s ease, visibility 0.3s ease, background-color 0.3s ease;
}

.modal.visible {
  visibility: visible;
  opacity: 1;
}

.modal-content {
  background-color: var(--modal-bg); color: var(--text-color); margin: auto;
  padding: 25px; border: 1px solid var(--modal-border); width: 80%; max-width: 600px;
  border-radius: 5px; position: relative; box-shadow: 0 4px 8px var(--shadow-color);
  transform: scale(0.9); transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

.modal.visible .modal-content {
  transform: scale(1);
}

.modal-content h3 {
  margin-top: 0; color: var(--text-color); border-bottom: 1px solid var(--button-bg);
  padding-bottom: 10px; margin-bottom: 15px; transition: color 0.3s ease, border-color 0.3s ease;
}

.modal-content p {
  line-height: 1.6; color: var(--modal-text); margin-top: 10px; margin-bottom: 10px; transition: color 0.3s ease;
}

.modal-content hr {
  margin: 15px 0; border: 0; border-top: 1px solid var(--button-bg); transition: border-color 0.3s ease;
}

.close-button {
  color: var(--modal-close-color); position: absolute; top: 10px; right: 15px;
  font-size: 28px; font-weight: bold; transition: color 0.2s ease;
}

.close-button:hover,
.close-button:focus {
  color: var(--modal-close-hover); text-decoration: none; cursor: pointer;
}

/* Tooltip Style */
.tooltip {
  position: absolute; /* Position relative to the nearest positioned ancestor (likely body or timeline-container) */
  display: none; /* Hidden by default */
  background-color: var(--card-bg-color);
  color: var(--text-color);
  border: 1px solid var(--card-border-color);
  padding: 5px 10px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap; /* Prevent wrapping */
  z-index: 101; /* Ensure it's above most other elements */
  box-shadow: 0 1px 3px var(--shadow-color);
  pointer-events: none; /* Prevent tooltip from interfering with mouse events */
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease; /* Match theme transitions */
}

/* --- Responsive Design --- */
@media (max-width: 768px) {
  body {
    align-items: stretch; /* Allow container to take full width */
  }

  h1 {
    font-size: 1.5em; /* Reduce title size */
    margin-top: 15px;
    margin-bottom: 10px;
  }

  .controls {
    position: relative; /* Change from absolute */
    top: auto;
    right: auto;
    width: 95%;
    max-width: 400px; /* Limit width on slightly larger mobile */
  margin: 10px auto 15px auto; /* Center below title */
  flex-direction: column; /* Stack control groups */
  align-items: stretch; /* Stretch groups to full width */
  gap: 10px;
  padding: 8px 10px;
  width: 90%; /* More controlled width */
  max-width: 500px; /* Max width for controls on mobile */
}

.controls-left,
.controls-center, /* Will apply to the (now empty) center div */
.controls-right {
  flex-direction: column; /* Stack items within each group */
  width: 100%; /* Make each group take full width of .controls */
  gap: 8px; /* Smaller gap for stacked items */
  align-items: center; /* Center items within each column group */
}

.actions-toggles-row {
  flex-direction: column; /* Stack buttons above toggles on mobile */
  align-items: center; /* Center them */
  width: 100%;
}

.toggles-group-stacked {
  align-items: center; /* Center toggles on mobile if they are stacked under buttons */
}

.image-toggle-control {
    justify-content: space-between; /* Space out label and checkbox */
    width: 150px; /* Give some fixed width */
  }

  .action-buttons {
    justify-content: center; /* Center buttons */
    width: 100%;
    gap: 10px; /* Adjust gap */
  }
  .action-buttons button {
    flex-grow: 0; /* Prevent buttons from growing too much */
  }


  .slider-control.zoom-control {
    flex-direction: column; /* Stack label above slider on mobile */
    align-items: center; /* Center items */
    /* width: 100%; Ensure it takes full width if needed, auto might be fine if parent is controlling */
  }
  .slider-control.zoom-control input[type="range"] {
    width: 100%; /* Full width for zoom slider input on mobile */
  }
  .slider-control.height-control {
    /* flex-direction: column; /* No longer stacking label */
    height: auto; /* Let content determine height */
    width: auto; /* Let content determine width */
    align-items: center; /* Center the horizontal slider */
  }

  #height-slider {
    appearance: auto; /* Revert to default horizontal slider for mobile */
    writing-mode: initial; /* Revert */
    width: 100%; /* Full width horizontal */
    max-width: 150px; /* Max width for aesthetics */
    height: 5px; /* Default horizontal height */
    /* flex-grow: 0; /* Do not grow, use explicit height */
  }
  /* .height-control label { /* Label removed */
  /*  margin-bottom: 0; */
  /* } */


  .timeline-container {
    height: 500px; /* Slightly reduce default height */
    border-left: none; /* Remove side borders for full width feel */
    border-right: none;
  }

  .scientist-photo {
    width: 40px; /* Smaller photos */
    height: 40px;
  }

  .publication,
  .discovery-marker {
    width: 10px; /* Slightly smaller markers */
    height: 10px;
  }

  .modal-content {
    width: 90%; /* More width for modal on mobile */
    padding: 20px;
  }

  .close-button {
    top: 5px;
    right: 10px;
    font-size: 24px;
  }
}
